{"ast":null,"code":"var _jsxFileName = \"/Users/fabinini/Developer/react/m2dev/src/components/todolist/TodoList.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useState } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport useLocalStorage from \"../useLocalStorage\";\nimport todo from \"./Todo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoList() {\n  _s();\n\n  const {\n    getStoredItem,\n    setItemToStorage\n  } = useLocalStorage();\n  const [todoList, setTodoList] = useState(getStoredItem('todoText') || []);\n\n  const addTodo = todo => {\n    console.log(todo);\n    if (!todo.text || /^\\s*$/.test(todo.text)) return;\n    const newTodoList = [todo.text, ...todoList];\n    setTodoList(newTodoList);\n    setItemToStorage(newTodoList, 'todoText');\n  };\n\n  const handleUpdate = (event, index) => {};\n\n  const handleDelete = (event, index) => {\n    const todoTemp = todoList.slice();\n    todoTemp.splice(index, 1);\n    setTodoList(todoTemp);\n    setItemToStorage(todoTemp, 'todoText');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TodoForm, {\n      onSubmit: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), todoList.map((listItem, index) => /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        name: listItem,\n        children: listItem\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: event => {\n          handleUpdate(event, index);\n        },\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: event => {\n          handleDelete(event, index);\n        },\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoList, \"lrLsTQTEEEFp+96NabK/S856F18=\", false, function () {\n  return [useLocalStorage];\n});\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["Fragment","useState","TodoForm","useLocalStorage","todo","TodoList","getStoredItem","setItemToStorage","todoList","setTodoList","addTodo","console","log","text","test","newTodoList","handleUpdate","event","index","handleDelete","todoTemp","slice","splice","map","listItem"],"sources":["/Users/fabinini/Developer/react/m2dev/src/components/todolist/TodoList.js"],"sourcesContent":["import {Fragment, useState} from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport useLocalStorage from \"../useLocalStorage\";\nimport todo from \"./Todo\";\n\nfunction TodoList() {\n\n    const { getStoredItem, setItemToStorage } = useLocalStorage();\n    const [todoList, setTodoList] = useState(getStoredItem('todoText') || []);\n\n    const addTodo = todo => {\n        console.log(todo)\n        if (!todo.text || /^\\s*$/.test(todo.text)) return;\n\n        const newTodoList = [todo.text, ...todoList]\n\n        setTodoList(newTodoList);\n        setItemToStorage(newTodoList, 'todoText');\n    }\n\n    const handleUpdate = (event, index) => {\n        \n    }\n\n    const handleDelete = (event, index) => {\n        const todoTemp = todoList.slice();\n        todoTemp.splice(index, 1);\n        setTodoList(todoTemp);\n        setItemToStorage(todoTemp, 'todoText');\n    }\n\n    return (\n        <div>\n            <TodoForm onSubmit={addTodo}></TodoForm>\n            {todoList.map((listItem, index) => (\n                <Fragment key={index}>\n                <p key={index} name={listItem}>{listItem}</p>\n                <button onClick={event => {handleUpdate(event, index)}}>Update</button>\n                <button onClick={event => {handleDelete(event, index)}}>Delete</button>\n                </Fragment>\n            ))}\n        </div>\n    )\n\n}\n\nexport default TodoList;"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,QAAlB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,SAASC,QAAT,GAAoB;EAAA;;EAEhB,MAAM;IAAEC,aAAF;IAAiBC;EAAjB,IAAsCJ,eAAe,EAA3D;EACA,MAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAACK,aAAa,CAAC,UAAD,CAAb,IAA6B,EAA9B,CAAxC;;EAEA,MAAMI,OAAO,GAAGN,IAAI,IAAI;IACpBO,OAAO,CAACC,GAAR,CAAYR,IAAZ;IACA,IAAI,CAACA,IAAI,CAACS,IAAN,IAAc,QAAQC,IAAR,CAAaV,IAAI,CAACS,IAAlB,CAAlB,EAA2C;IAE3C,MAAME,WAAW,GAAG,CAACX,IAAI,CAACS,IAAN,EAAY,GAAGL,QAAf,CAApB;IAEAC,WAAW,CAACM,WAAD,CAAX;IACAR,gBAAgB,CAACQ,WAAD,EAAc,UAAd,CAAhB;EACH,CARD;;EAUA,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB,CAEtC,CAFD;;EAIA,MAAMC,YAAY,GAAG,CAACF,KAAD,EAAQC,KAAR,KAAkB;IACnC,MAAME,QAAQ,GAAGZ,QAAQ,CAACa,KAAT,EAAjB;IACAD,QAAQ,CAACE,MAAT,CAAgBJ,KAAhB,EAAuB,CAAvB;IACAT,WAAW,CAACW,QAAD,CAAX;IACAb,gBAAgB,CAACa,QAAD,EAAW,UAAX,CAAhB;EACH,CALD;;EAOA,oBACI;IAAA,wBACI,QAAC,QAAD;MAAU,QAAQ,EAAEV;IAApB;MAAA;MAAA;MAAA;IAAA,QADJ,EAEKF,QAAQ,CAACe,GAAT,CAAa,CAACC,QAAD,EAAWN,KAAX,kBACV,QAAC,QAAD;MAAA,wBACA;QAAe,IAAI,EAAEM,QAArB;QAAA,UAAgCA;MAAhC,GAAQN,KAAR;QAAA;QAAA;QAAA;MAAA,QADA,eAEA;QAAQ,OAAO,EAAED,KAAK,IAAI;UAACD,YAAY,CAACC,KAAD,EAAQC,KAAR,CAAZ;QAA2B,CAAtD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFA,eAGA;QAAQ,OAAO,EAAED,KAAK,IAAI;UAACE,YAAY,CAACF,KAAD,EAAQC,KAAR,CAAZ;QAA2B,CAAtD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHA;IAAA,GAAeA,KAAf;MAAA;MAAA;MAAA;IAAA,QADH,CAFL;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAaH;;GAvCQb,Q;UAEuCF,e;;;KAFvCE,Q;AAyCT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}