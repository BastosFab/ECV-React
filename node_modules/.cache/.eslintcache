[{"/Users/fabinini/Developer/react/m2dev/src/index.js":"1","/Users/fabinini/Developer/react/m2dev/src/reportWebVitals.js":"2","/Users/fabinini/Developer/react/m2dev/src/App.js":"3","/Users/fabinini/Developer/react/m2dev/src/components/layout/Header.js":"4","/Users/fabinini/Developer/react/m2dev/src/components/exemple/Exemple4.js":"5","/Users/fabinini/Developer/react/m2dev/src/components/exemple/Exemple1.js":"6","/Users/fabinini/Developer/react/m2dev/src/components/exemple/Exemple2.js":"7","/Users/fabinini/Developer/react/m2dev/src/components/exemple/Exemple3.js":"8","/Users/fabinini/Developer/react/m2dev/src/components/todolist/Todo.js":"9","/Users/fabinini/Developer/react/m2dev/src/components/todolist/TodoForm.js":"10","/Users/fabinini/Developer/react/m2dev/src/components/todolist/TodoList.js":"11","/Users/fabinini/Developer/react/m2dev/src/components/useLocalStorage.js":"12","/Users/fabinini/Developer/react/m2dev/src/routers/MainRouter.js":"13","/Users/fabinini/Developer/react/m2dev/src/components/theme/Theme.js":"14","/Users/fabinini/Developer/react/m2dev/src/components/Home.js":"15"},{"size":578,"mtime":1664539047383,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1664536888418,"results":"18","hashOfConfig":"17"},{"size":376,"mtime":1665480066086,"results":"19","hashOfConfig":"17"},{"size":1431,"mtime":1665602506521,"results":"20","hashOfConfig":"17"},{"size":1154,"mtime":1664547666939,"results":"21","hashOfConfig":"17"},{"size":742,"mtime":1664545247046,"results":"22","hashOfConfig":"17"},{"size":758,"mtime":1664545148374,"results":"23","hashOfConfig":"17"},{"size":809,"mtime":1664546000839,"results":"24","hashOfConfig":"17"},{"size":216,"mtime":1665140986807,"results":"25","hashOfConfig":"17"},{"size":761,"mtime":1665142604933,"results":"26","hashOfConfig":"17"},{"size":3818,"mtime":1665480361077,"results":"27","hashOfConfig":"17"},{"size":525,"mtime":1665128256904,"results":"28","hashOfConfig":"17"},{"size":1185,"mtime":1665602506522,"results":"29","hashOfConfig":"17"},{"size":718,"mtime":1665602934783,"results":"30","hashOfConfig":"17"},{"size":1429,"mtime":1665496159025,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"1bghwu9",{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"35"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"/Users/fabinini/Developer/react/m2dev/src/index.js",[],[],[],"/Users/fabinini/Developer/react/m2dev/src/reportWebVitals.js",[],[],"/Users/fabinini/Developer/react/m2dev/src/App.js",[],[],"/Users/fabinini/Developer/react/m2dev/src/components/layout/Header.js",[],[],"/Users/fabinini/Developer/react/m2dev/src/components/exemple/Exemple4.js",[],[],"/Users/fabinini/Developer/react/m2dev/src/components/exemple/Exemple1.js",[],[],"/Users/fabinini/Developer/react/m2dev/src/components/exemple/Exemple2.js",[],[],"/Users/fabinini/Developer/react/m2dev/src/components/exemple/Exemple3.js",[],[],"/Users/fabinini/Developer/react/m2dev/src/components/todolist/Todo.js",[],[],"/Users/fabinini/Developer/react/m2dev/src/components/todolist/TodoForm.js",[],[],"/Users/fabinini/Developer/react/m2dev/src/components/todolist/TodoList.js",["79"],[],"import {useState} from \"react\";\nimport {Form} from \"react-bootstrap\";\nimport TodoForm from \"./TodoForm\";\nimport useLocalStorage from \"../useLocalStorage\";\nimport { v4 as uuidv4 } from 'uuid';\nimport button from \"bootstrap/js/src/button\";\n\nfunction TodoList() {\n\n    const { getStoredItem, setItemToStorage } = useLocalStorage();\n    const [todoList, setTodoList] = useState(getStoredItem('todoText') || []);\n\n    const addTodo = todo => {\n        if (!todo.text || /^\\s*$/.test(todo.text)) return;\n\n        const newTodoList = [todo, ...todoList]\n\n        setTodoList(newTodoList);\n        setItemToStorage(newTodoList, 'todoText');\n    }\n\n    const handleUpdate = (newValue, index) => {\n        const todoTem = todoList.slice();\n        todoTem[index] = newValue;\n        setTodoList(todoTem);\n        setItemToStorage(todoTem, 'todoText');\n\n    }\n\n    const handleDelete = (event, index) => {\n        const todoTemp = todoList.slice();\n        todoTemp.splice(index, 1);\n        setTodoList(todoTemp);\n        setItemToStorage(todoTemp, 'todoText');\n    }\n\n    return (\n        <div>\n            <TodoForm onSubmit={addTodo}></TodoForm>\n            {todoList.map((listItem, index) => (\n                <TodoLine\n                 key={uuidv4()}\n                 index={index}\n                 listItem={listItem}\n                 handleUpdate={handleUpdate}\n                 handleDelete={handleDelete}\n                />\n            ))}\n        </div>\n    )\n\n}\n\nconst TodoLine = ({index, listItem, handleUpdate, handleDelete}) => {\n\n    const [updateTodo, setUpdateTodo] = useState(false);\n    const [newValue, setNewValue] = useState(listItem);\n\n    const handleUpdateController = () => {\n        handleUpdate(newValue, index);\n    }\n\n    const handleChange = (event) => {\n        setNewValue({...newValue, text:event.target.value});\n    }\n\n    const handleCheck = (event) => {\n        handleUpdate({...newValue, checked:true}, index);\n    }\n    const handleUncheck = (event) => {\n        handleUpdate({...newValue, checked:false}, index);\n    }\n\n    const truncate = (input) => {\n        if (input.length > 20) {\n            return input.substring(0, 20) + '...';\n        }\n        return input;\n    }\n\n    return(\n        <div className={'todo-container'}>\n            {updateTodo ?\n                <div className={'todo-row'}>\n                    <Form.Control type={'text'} value={newValue.text} onChange={handleChange} className={'todo-input-edit'}/>\n                    <div className={'icons'}>\n                        <button onClick={handleUpdateController} className={'update-icon'}>\n                            <i className=\"fa-solid fa-check\"></i>\n                        </button>\n                    </div>\n                </div> :\n            <div className={'todo-row ' + (listItem.checked ? 'uncheck' : '')}>\n                <p key={index} name={listItem}>{truncate(listItem.text)}</p>\n                <div className={'icons'}>\n                    {!listItem.checked ? <button onClick={handleCheck} className={'check-icon'}>\n                        <i className=\"fa-solid fa-check fa-xl\"></i>\n                    </button>\n                    :  <button onClick={handleUncheck} className={'uncheck-icon'}>\n                            <i className=\"fa-solid fa-xmark fa-xl\"></i>\n                        </button>\n                    }\n                    <button onClick={(e)=>setUpdateTodo(true)} className={'edit-icon'}>\n                        <i className=\"fa-solid fa-pen\"></i>\n                    </button>\n                    <button onClick={event => {handleDelete(event, index)}} className={'delete-icon'}>\n                        <i className=\"fa-solid fa-trash\"></i>\n                    </button>\n                </div>\n            </div>}\n        </div>\n    )\n}\n\nexport default TodoList;","/Users/fabinini/Developer/react/m2dev/src/components/useLocalStorage.js",[],[],"/Users/fabinini/Developer/react/m2dev/src/routers/MainRouter.js",[],[],"/Users/fabinini/Developer/react/m2dev/src/components/theme/Theme.js",["80"],[],"/Users/fabinini/Developer/react/m2dev/src/components/Home.js",[],[],{"ruleId":"81","severity":1,"message":"82","line":6,"column":8,"nodeType":"83","messageId":"84","endLine":6,"endColumn":14},{"ruleId":"81","severity":1,"message":"82","line":2,"column":8,"nodeType":"83","messageId":"84","endLine":2,"endColumn":14},"no-unused-vars","'button' is defined but never used.","Identifier","unusedVar"]